const express = require("express");
const router = express.Router();
const User = require("../models/user");
const bcrypt = require("bcryptjs");
const authFile = require("../service/authentication");

router.get("/trialroute", function (req, res) {
  return res.send("This is the trial route");
});

// register
router.post("/register", async (req, res) => {
  var salt = bcrypt.genSaltSync(10);
  var hash = bcrypt.hashSync(req.body.password, salt);

  await User.create({
    useremail: req.body.useremail,
    password: hash,
  });

  return res.send("User created");
});

// get all users
router.get("/fetchusers", async (req, res) => {
  const users = await User.find({});

  return res.send(users);
});

// get user by email
router.get("/getuserbyemail", async (req, res) => {
  try {
    const user = await User.find({ useremail: req.body.useremail });

    return res.send(user);
  } catch (error) {
    console.log(error);
    return res.send(error);
  }
});

//delete user
router.delete("/deleteuser", async (req, res) => {
  const id = req.body.id;
  await User.findByIdAndDelete(id);

  return res.send("User deleted successfully");
});

//update user
router.post("/updateuser", async (req, res) => {
  const id = req.body.id;

  const updatedUser = await User.findByIdAndUpdate(id, {
    password: req.body.password,
  });

  await updatedUser.save();

  const ret = await User.findById(id);

  return res.send(ret);
});

router.post("/signin", async (req, res) => {
  const user = await User.findOne({ useremail: req.body.useremail });

  if (!user) {
    return res.send("User not found");
  }

  // find -> array
  // findOne -> object

  const check = bcrypt.compareSync(req.body.password, user.password);

  if (!check) {
    return res.status(500).send("User password is not correct");
  }

  const token = authFile.genToken(user._id);

  return res.send(token);
});

module.exports = router;

// create ----
// find({}) ----
// findOne({}) ----
// findByIdAndDelete(id) ----
// findByIdAndUpdate(id) ----
// findById(id) ----